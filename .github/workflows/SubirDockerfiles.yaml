name: Reusable Subir Imagen

on:
  workflow_call:
    inputs:
      MICROSERVICE:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string

jobs:
  subirImagen:
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Configurar linter y realizar análisis de código
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          echo "Configurando y ejecutando linter"
          npm install eslint --save-dev
          npx eslint --init
          npx eslint . --ext .js,.jsx,.ts,.tsx

      - name: Mostrar archivos
        run: ls

      - name: Mostrar secretos
        run: |
          echo "ARM_CLIENT_ID: $ARM_CLIENT_ID"
          echo "ARM_CLIENT_SECRET: [OCULTO]"
          echo "ARM_TENANT_ID: $ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID"

      - name: Instalar CLI de Azure
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Iniciar sesión en Azure
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "$ARM_CLIENT_ID",
              "clientSecret": "$ARM_CLIENT_SECRET",
              "tenantId": "$ARM_TENANT_ID",
              "subscriptionId": "$ARM_SUBSCRIPTION_ID"
            }

      - name: Login en Azure Container Registry
        run: |
          az acr login --name containerregistryvsanchez

      - name: Extraer versión desde package.json (Frontend)
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        uses: stemdo-labs/final-project-exercise-ValentinoSanchez00/.github/actions/frontend@develop
        id: frontend-version
        with:
          path: ./package.json

      - name: Extraer versión desde pom.xml (Backend)
        if: ${{ inputs.MICROSERVICE == 'backend' }}
        uses: stemdo-labs/final-project-exercise-ValentinoSanchez00/.github/actions/backend@develop
        id: backend-version
        with:
          path: ./pom.xml

      - name: Construir imagen
        run: |
          docker build -t imagen-proyecto-${{ inputs.MICROSERVICE }} .

      - name: Etiquetar la imagen (Frontend)
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          docker tag imagen-proyecto-${{ inputs.MICROSERVICE }} containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}:${{ steps.frontend-version.outputs.version }}

      - name: Etiquetar la imagen (Backend)
        if: ${{ inputs.MICROSERVICE == 'backend' }}
        run: |
          docker tag imagen-proyecto-${{ inputs.MICROSERVICE }} containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}:${{ steps.backend-version.outputs.version }}

      - name: Pushear imagen (Frontend)
        if: ${{ inputs.MICROSERVICE == 'frontend' }}
        run: |
          docker push containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}:${{ steps.frontend-version.outputs.version }}

      - name: Pushear imagen (Backend)
        if: ${{ inputs.MICROSERVICE == 'backend' }}
        run: |
          docker push containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}:${{ steps.backend-version.outputs.version }}
