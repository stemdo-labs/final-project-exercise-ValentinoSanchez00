- name: Backup
  hosts: bd
  become: true
  vars:
    postgres_user: "postgres"
    postgres_db: "orquestas"
    backup_file: "/ruta/del/backup/backup_{{ ansible_date_time.date }}.sql.gz.enc"
    encryption_key: "tu_clave_de_cifrado"

  tasks:
    - name: Instalar dependencias necesarias
      become: true
      apt:
        name:
          - python3
          - python3-pip
          - python3-dev
          - python3-venv
          - libpq-dev
          - curl
        state: present

    - name: Crear el directorio de backups si no existe
      file:
        path: "/var/backups/postgres"
        state: directory
        mode: '0755'

    - name: Dump y cifrar la base de datos PostgreSQL
      shell: |
        pg_dump -U {{ postgres_user }} {{ postgres_db }} | gzip | openssl enc -aes-256-cbc -salt -out {{ backup_file }} -k "{{ encryption_key }}"
      environment:
        PGPASSWORD: "tu_password_postgres"
      register: backup_result

    - name: Verificar si el dump y cifrado fue exitoso
      debug:
        msg: "Backup creado correctamente en {{ backup_file }}"
      when: backup_result.rc == 0
