- name: Backup
  hosts: bd
  become: true
  vars:
    postgres_user: "postgres"
    postgres_db: "orquestas"
    backup_file: "/var/backups/postgres/backup_{{ ansible_date_time.date }}.sql.gz.enc"
    encryption_key: "G7x!#aB12$vf@kT"
    local_backup_dir: "/tmp/backups"
    ansible_user: "adminuser"

  tasks:
    - name: Crear el directorio de backups si no existe
      file:
        path: "/var/backups/postgres"
        state: directory
        mode: '0755'

    - name: Dump y cifrar la base de datos PostgreSQL
      shell: |
        pg_dump -U {{ postgres_user }} {{ postgres_db }} | gzip | openssl enc -aes-256-cbc -salt -out {{ backup_file }} -k "{{ encryption_key }}"
      environment:
        PGPASSWORD: "mypassword"
      register: backup_result

    - name: Verificar si el dump y cifrado fue exitoso
      debug:
        msg: "Backup creado correctamente en {{ backup_file }}"
      when: backup_result.rc == 0

    - name: Crear el directorio local de backups si no existe
      local_action:
        module: file
        path: "{{ local_backup_dir }}"
        state: directory
        mode: '0755'
        
    - name: Ajustar permisos del archivo de backup
      file:
        path: "{{ backup_file }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
    
    - name: Traer el backup al controlador local
      fetch:
        src: "{{ backup_file }}"
        dest: "{{ local_backup_dir }}/"
        flat: yes

    - name: Confirmar la transferencia del archivo al controlador local
      debug:
        msg: "Backup transferido correctamente al controlador local en {{ local_backup_dir }}/{{ backup_file | basename }}"

    